package fr.intervia.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

import fr.intervia.domaine.CompteExploitation;
import fr.intervia.domaine.CompteExploitation.LibCompte;
import fr.intervia.domaine.MoisCampagne;

@Repository
public class CompteExploitationDAO extends JdbcDaoSupport {

	@Autowired
	private DataSource dataSource;

	@PostConstruct
	private void initialize(){
		setDataSource(dataSource);
	}

	@Autowired
	private CERowMapper rowMapper;

	private JdbcTemplate template;


	private static final String SQL_FIND_MOIS_BY_CODE = "select code_consultant, "
			+ "extract(month from date) as mois, extract(year from date) as annee, "
			+ "type_frais, valeur  "
			+ "from public.ce_source where code_consultant = ? "
			+ "and extract(month from date)=? "
			+ "and extract(year from date)=?; ";

	@PostConstruct
	private void postConstruct() {
		this.template = new JdbcTemplate(dataSource);
	}
	
	
	public List<CompteExploitation> findByCode(String code, MoisCampagne mois) {
		System.out.println(SQL_FIND_MOIS_BY_CODE);
		return template.query(SQL_FIND_MOIS_BY_CODE, new Object[] {code, mois.getMois().getNum(), mois.getAnnee()}, rowMapper);
	}
	

	@Component
	public class CERowMapper implements RowMapper<CompteExploitation> {

		@Override
		public CompteExploitation mapRow(ResultSet rs, int rowNum) throws SQLException {
			CompteExploitation ce = new CompteExploitation();
			ce.setLibCompte(LibCompte.of(rs.getString("type_frais")));
			ce.setVal(rs.getDouble("valeur"));
			return ce;
		}
	}
}
